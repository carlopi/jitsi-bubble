{"ast":null,"code":"var _jsxFileName = \"/home/carlo/work/curr/jitsi-bubble/src/App.js\";\n\n/* global JitsiMeetJS config*/\nimport React, { useState, useCallback, useEffect, useMemo } from 'react';\nimport './App.css';\nimport BubbleContainer from './bubbleContainer.js';\nimport $ from 'jquery';\nimport { Seat } from './components/Seat';\nimport { ConnectForm } from './components/ConnectForm';\nimport { Audio } from './components/Audio';\nimport useWindowSize from './hooks/useWindowSize';\nimport qs from 'qs';\nwindow.$ = $;\n\nconst connect = async ({\n  domain,\n  room,\n  config\n}) => {\n  const connectionConfig = Object.assign({}, config);\n  let serviceUrl = connectionConfig.websocket || connectionConfig.bosh;\n  serviceUrl += `?room=${room}`;\n  connectionConfig.serviceUrl = connectionConfig.bosh = serviceUrl;\n  return new Promise((resolve, reject) => {\n    const connection = new JitsiMeetJS.JitsiConnection(null, undefined, connectionConfig);\n    console.log('JitsiMeetJS.events.connection.CONNECTION_ESTABLISHED', JitsiMeetJS.events.connection.CONNECTION_ESTABLISHED);\n    connection.addEventListener(JitsiMeetJS.events.connection.CONNECTION_ESTABLISHED, () => resolve(connection));\n    connection.addEventListener(JitsiMeetJS.events.connection.CONNECTION_FAILED, reject);\n    connection.connect();\n  });\n};\n\nconst join = async ({\n  connection,\n  room\n}) => {\n  const conference = connection.initJitsiConference(room, {});\n  return new Promise(resolve => {\n    conference.on(JitsiMeetJS.events.conference.CONFERENCE_JOINED, () => resolve(conference));\n    conference.join();\n  });\n};\n\nconst connectandJoin = async ({\n  domain,\n  room,\n  config\n}) => {\n  const connection = await connect({\n    domain,\n    room,\n    config\n  });\n  const localTracks = await JitsiMeetJS.createLocalTracks({\n    devices: ['video', 'audio'],\n    facingMode: 'user'\n  }, true);\n  const conference = await join({\n    connection,\n    room\n  });\n  const localTrack = localTracks.find(track => track.getType() === 'video');\n  conference.addTrack(localTrack);\n  const localAudioTrack = localTracks.find(track => track.getType() === 'audio');\n  conference.addTrack(localAudioTrack);\n  return {\n    connection,\n    conference,\n    localTrack\n  };\n};\n\nconst loadAndConnect = ({\n  domain,\n  room\n}) => {\n  return new Promise(resolve => {\n    const script = document.createElement('script');\n\n    script.onload = () => {\n      JitsiMeetJS.init();\n      const configScript = document.createElement('script');\n      configScript.src = `https://${domain}/config.js`;\n      document.querySelector('head').appendChild(configScript);\n\n      configScript.onload = () => {\n        connectandJoin({\n          domain,\n          room,\n          config\n        }).then(resolve);\n      };\n    };\n\n    script.src = `https://${domain}/libs/lib-jitsi-meet.min.js`;\n    document.querySelector('head').appendChild(script);\n  });\n};\n\nvar BUBBLECOLLECTION;\nvar MAP = {};\nvar DEFINED = false;\n\nfunction RAF() {\n  window.requestAnimationFrame(RAF);\n  BUBBLECOLLECTION.doStep();\n}\n\nfunction plippo(track) {\n  if (!BUBBLECOLLECTION) {\n    BUBBLECOLLECTION = new BubbleContainer(document.getElementById(\"container\"));\n  }\n\n  var VIDEO = document.createElement(\"video\");\n  VIDEO.style.height = \"100%\";\n  VIDEO.style.flexShrink = \"0\";\n  VIDEO.style.center = \"center\";\n  VIDEO.autoplay = '1';\n  track.attach(VIDEO);\n\n  if (typeof MAP[track.getId()] === 'undefined') {\n    MAP[track.getId()] = VIDEO;\n    BUBBLECOLLECTION.insert(VIDEO);\n  }\n\n  if (DEFINED === false) {\n    DEFINED = true;\n    RAF();\n  }\n}\n\nconst useTracks = () => {\n  const [tracks, setTracks] = useState([]);\n  const addTrack = useCallback(track => {\n    setTracks(tracks => {\n      const hasTrack = tracks.find(_track => track.getId() === _track.getId());\n      if (hasTrack) return tracks;\n\n      if (track.getType() === \"video\") {\n        plippo(track);\n      }\n\n      return [...tracks, track];\n    });\n  }, [setTracks]);\n  const removeTrack = useCallback(track => {\n    if (track.getType() === \"video\") if (BUBBLECOLLECTION) if (typeof MAP[track.getId()] !== 'undefined') {\n      BUBBLECOLLECTION.erase(MAP[track.getId()]);\n      MAP[track.getId()] = undefined;\n    }\n    setTracks(tracks => tracks.filter(_track => track.getId() !== _track.getId()));\n  }, [setTracks]);\n  return [tracks, addTrack, removeTrack];\n};\n\nconst getDefaultParamsValue = () => {\n  var _params$room, _params$domain, _params$autojoin;\n\n  const params = document.location.search.length > 1 ? qs.parse(document.location.search.slice(1)) : {};\n  debugger;\n  return {\n    room: (_params$room = params.room) !== null && _params$room !== void 0 ? _params$room : 'daily_standup',\n    domain: (_params$domain = params.domain) !== null && _params$domain !== void 0 ? _params$domain : 'meet.jit.si',\n    autoJoin: (_params$autojoin = params.autojoin) !== null && _params$autojoin !== void 0 ? _params$autojoin : false\n  };\n};\n\nfunction App() {\n  useWindowSize();\n  const defaultParams = useMemo(getDefaultParamsValue, []);\n  const [mainState, setMainState] = useState('init');\n  const [domain, setDomain] = useState(defaultParams.domain);\n  const [room, setRoom] = useState(defaultParams.room);\n  const [conference, setConference] = useState(null);\n  const [videoTracks, addVideoTrack, removeVideoTrack] = useTracks();\n  const [audioTracks, addAudioTrack, removeAudioTrack] = useTracks();\n  const addTrack = useCallback(track => {\n    if (track.getType() === 'video') {\n      addVideoTrack(track);\n    }\n\n    if (track.getType() === 'audio') addAudioTrack(track);\n  }, [addVideoTrack, addAudioTrack]);\n  const removeTrack = useCallback(track => {\n    if (track.getType() === 'video') removeVideoTrack(track);\n    if (track.getType() === 'audio') removeAudioTrack(track);\n  }, [removeAudioTrack, removeVideoTrack]);\n  const connect = useCallback(async e => {\n    e && e.preventDefault();\n    setMainState('loading');\n    const {\n      connection,\n      conference,\n      localTrack\n    } = await loadAndConnect({\n      domain,\n      room\n    });\n    setMainState('started');\n    setConference(conference);\n    addTrack(localTrack);\n  }, [addTrack, domain, room]);\n  useEffect(() => {\n    if (!conference) return;\n    conference.on(JitsiMeetJS.events.conference.TRACK_ADDED, addTrack);\n    conference.on(JitsiMeetJS.events.conference.TRACK_REMOVED, removeTrack);\n  }, [addTrack, conference, removeTrack]);\n  useEffect(() => {\n    if (defaultParams.autoJoin || defaultParams.autoJoin === '') {\n      connect();\n    }\n  }, [connect, defaultParams.autoJoin]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }\n  }, mainState === 'init' && /*#__PURE__*/React.createElement(ConnectForm, {\n    connect: connect,\n    domain: domain,\n    room: room,\n    setRoom: setRoom,\n    setDomain: setDomain,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 35\n    }\n  }), mainState === 'loading' && 'Loading', mainState === 'started' && /*#__PURE__*/React.createElement(\"div\", {\n    id: \"container\",\n    style: {\n      height: '100vh',\n      width: '100vw',\n      maxHeight: '100vw',\n      maxWidth: '100vh',\n      background: 'rgba(0, 100,100, 1)',\n      position: 'relative'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, \"}\", audioTracks.map((track, index) => /*#__PURE__*/React.createElement(Audio, {\n    track: track,\n    index: index,\n    key: track.getId(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 45\n    }\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/carlo/work/curr/jitsi-bubble/src/App.js"],"names":["React","useState","useCallback","useEffect","useMemo","BubbleContainer","$","Seat","ConnectForm","Audio","useWindowSize","qs","window","connect","domain","room","config","connectionConfig","Object","assign","serviceUrl","websocket","bosh","Promise","resolve","reject","connection","JitsiMeetJS","JitsiConnection","undefined","console","log","events","CONNECTION_ESTABLISHED","addEventListener","CONNECTION_FAILED","join","conference","initJitsiConference","on","CONFERENCE_JOINED","connectandJoin","localTracks","createLocalTracks","devices","facingMode","localTrack","find","track","getType","addTrack","localAudioTrack","loadAndConnect","script","document","createElement","onload","init","configScript","src","querySelector","appendChild","then","BUBBLECOLLECTION","MAP","DEFINED","RAF","requestAnimationFrame","doStep","plippo","getElementById","VIDEO","style","height","flexShrink","center","autoplay","attach","getId","insert","useTracks","tracks","setTracks","hasTrack","_track","removeTrack","erase","filter","getDefaultParamsValue","params","location","search","length","parse","slice","autoJoin","autojoin","App","defaultParams","mainState","setMainState","setDomain","setRoom","setConference","videoTracks","addVideoTrack","removeVideoTrack","audioTracks","addAudioTrack","removeAudioTrack","e","preventDefault","TRACK_ADDED","TRACK_REMOVED","width","maxHeight","maxWidth","background","position","map","index"],"mappings":"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","sourcesContent":["/* global JitsiMeetJS config*/\nimport React, { useState, useCallback, useEffect, useMemo } from 'react';\nimport './App.css';\nimport BubbleContainer from './bubbleContainer.js'\nimport $ from 'jquery'\nimport { Seat } from './components/Seat';\nimport { ConnectForm } from './components/ConnectForm';\nimport { Audio } from './components/Audio';\nimport useWindowSize from './hooks/useWindowSize'\n\nimport qs from 'qs'\n\nwindow.$  = $\n\nconst connect = async ({ domain, room, config }) => {\n  const connectionConfig = Object.assign({}, config);\n  let serviceUrl = connectionConfig.websocket || connectionConfig.bosh;\n\n  serviceUrl += `?room=${room}`;\n\n  connectionConfig.serviceUrl = connectionConfig.bosh = serviceUrl;\n  \n  return new Promise((resolve, reject) => {\n    const connection = new JitsiMeetJS.JitsiConnection(null, undefined, connectionConfig);\n    console.log('JitsiMeetJS.events.connection.CONNECTION_ESTABLISHED', JitsiMeetJS.events.connection.CONNECTION_ESTABLISHED)\n    connection.addEventListener(\n      JitsiMeetJS.events.connection.CONNECTION_ESTABLISHED,\n      () => resolve(connection));\n    connection.addEventListener(JitsiMeetJS.events.connection.CONNECTION_FAILED, reject);\n    connection.connect();\n  }) \n}\n\nconst join = async ({ connection, room }) => {\n  const conference = connection.initJitsiConference(room, {});\n\n  return new Promise(resolve => {\n    conference.on(JitsiMeetJS.events.conference.CONFERENCE_JOINED, () => resolve(conference));\n    conference.join();\n  })\n}\n\nconst connectandJoin = async ({ domain, room, config }) => {\n\n  const connection = await connect({ domain, room, config })\n  const localTracks = await JitsiMeetJS.createLocalTracks({ devices: ['video', 'audio'], facingMode: 'user'}, true);\n\n  const conference = await join({ connection, room })\n  const localTrack = localTracks.find(track => track.getType() === 'video')\n  conference.addTrack(localTrack)\n  const localAudioTrack = localTracks.find(track => track.getType() === 'audio')\n  conference.addTrack(localAudioTrack)\n\n  return { connection, conference, localTrack }\n}\n\nconst loadAndConnect = ({ domain, room}) => {\n\n    return new Promise(( resolve ) => {\n      const script = document.createElement('script')\n      script.onload = () => {\n        JitsiMeetJS.init();\n\n        const configScript = document.createElement('script')\n        configScript.src = `https://${domain}/config.js`;\n        document.querySelector('head').appendChild(configScript);\n        configScript.onload = () => {\n          connectandJoin({ domain, room, config }).then(resolve)\n        }       \n      };\n\n      script.src = `https://${domain}/libs/lib-jitsi-meet.min.js`;\n      document.querySelector('head').appendChild(script);\n    })\n}\n\nvar BUBBLECOLLECTION;\nvar MAP = {};\nvar DEFINED = false;\nfunction RAF() \n{\n        window.requestAnimationFrame(RAF);\n        BUBBLECOLLECTION.doStep();\n}\nfunction plippo(track) \n\t{\n\n if (!BUBBLECOLLECTION) {\n     \tBUBBLECOLLECTION = new BubbleContainer(document.getElementById(\"container\"));\n}\n\n\tvar VIDEO = document.createElement(\"video\");\n\tVIDEO.style.height = \"100%\";\n\tVIDEO.style.flexShrink = \"0\";\n\tVIDEO.style.center = \"center\";\n\tVIDEO.autoplay = '1';\n\ttrack.attach(VIDEO);\n\tif (typeof MAP[track.getId()] === 'undefined')\n\t\t{\n\t\tMAP[track.getId()] = VIDEO;\n      \t   BUBBLECOLLECTION.insert(VIDEO);\n\t\t}\nif (DEFINED === false)\n{\nDEFINED = true;\nRAF();\n}\n\t}\n\nconst useTracks = () => {\n  const [tracks, setTracks] = useState([])\n  \n  const addTrack = useCallback((track) => {\n    setTracks((tracks) => {\n      const hasTrack = tracks.find(_track => track.getId() === _track.getId())\n      \n      if(hasTrack) return tracks;\n\n\n      if (track.getType() === \"video\")\n      {\n      \tplippo(track);\n\t}\n     return [...tracks, track];\n    });\n  }, [setTracks])\n\n  const removeTrack = useCallback((track) => {\n\n\t\t  if (track.getType() === \"video\")\n\t\t  \tif (BUBBLECOLLECTION)\n\t\t\t\tif (typeof MAP[track.getId()] !== 'undefined')\n\t\t\t\t\t{\n\t\t\t\t\tBUBBLECOLLECTION.erase(MAP[track.getId()]);\n\t\t\t\t\tMAP[track.getId()] = undefined;\n\t\t\t\t\t}\n\t\t\t\t  \t\n\n    setTracks((tracks) => tracks.filter(_track => track.getId() !== _track.getId()));\n  }, [setTracks])\n\n  return [tracks, addTrack, removeTrack]\n}\n\nconst getDefaultParamsValue = () => {\n  const params = document.location.search.length > 1 ? qs.parse(document.location.search.slice(1)) : {}\n  debugger;\n  return {\n    room: params.room ?? 'daily_standup',\n    domain: params.domain ?? 'meet.jit.si',\n    autoJoin: params.autojoin ?? false,\n  }\n}\n\n\nfunction App() {\n\n  useWindowSize()\n  const defaultParams = useMemo(getDefaultParamsValue, [])\n\n  const [mainState, setMainState] = useState('init')\n  const [domain, setDomain] = useState(defaultParams.domain)\n  const [room, setRoom] = useState(defaultParams.room)\n  const [conference, setConference] = useState(null)\n  const [videoTracks, addVideoTrack, removeVideoTrack] = useTracks();\n  const [audioTracks, addAudioTrack, removeAudioTrack] = useTracks();\n  \n  const addTrack = useCallback((track) => {\n    if(track.getType() === 'video') \n    {\n    addVideoTrack(track);\n    }\n    if(track.getType() === 'audio') addAudioTrack(track)\n  }, [ addVideoTrack, addAudioTrack ])\n\n  const removeTrack = useCallback((track) => {\n    if(track.getType() === 'video') removeVideoTrack(track)\n    if(track.getType() === 'audio') removeAudioTrack(track)\n  }, [removeAudioTrack, removeVideoTrack])\n\n  const connect = useCallback(async (e) => {\n    e && e.preventDefault()\n    setMainState('loading')\n    const { connection, conference, localTrack } = await loadAndConnect({ domain, room });\n    setMainState('started')\n    setConference(conference)\n    addTrack(localTrack)\n  }, [addTrack, domain, room]);\n\n  useEffect(() => {\n    if(!conference) return\n\n    conference.on(JitsiMeetJS.events.conference.TRACK_ADDED, addTrack)\n    conference.on(JitsiMeetJS.events.conference.TRACK_REMOVED, removeTrack)\n    \n  }, [addTrack, conference, removeTrack])\n\n  useEffect(() => {\n    if(defaultParams.autoJoin || defaultParams.autoJoin === ''){\n      connect()\n    }\n  }, [connect, defaultParams.autoJoin])\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        { mainState === 'init' && <ConnectForm connect={connect} domain={domain} room={room} setRoom={setRoom} setDomain={setDomain} /> }\n        { mainState === 'loading' && 'Loading' }\n        { mainState === 'started' &&\n        <div id=\"container\" style={{\n          height: '100vh', width: '100vw', maxHeight: '100vw', maxWidth: '100vh',\n          background: 'rgba(0, 100,100, 1)',\n          position: 'relative'\n      }}>\n}\n        {\n     //     videoTracks.map((track, index) => <Seat track={track} xPos={Math.random()} yPos={Math.random()} seatSize={0.3} length={videoTracks.length} key={track.getId()} />)\n        }\n        {\n          audioTracks.map((track, index) => <Audio track={track} index={index} key={track.getId()} />)\n        }\n       </div>}\n        \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}