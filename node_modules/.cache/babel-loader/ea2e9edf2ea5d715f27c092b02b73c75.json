{"ast":null,"code":"var _jsxFileName = \"/home/carlo/work/curr/jitsi-bubble/src/components/Seat.js\";\nimport React from 'react';\nimport { Circle } from './Circle';\nimport { getWidthForSeats, getDistanceRatioForSeats } from '../utils';\nexport const Seat = ({\n  track,\n  index,\n  length\n}) => {\n  const seatSize = getWidthForSeats(length);\n  const disanceRatio = getDistanceRatioForSeats(length);\n  const angle = 360 / length * index;\n  const horizontal = Math.cos(angle * 2 * Math.PI / 360) * disanceRatio;\n  const vertical = Math.sin(angle * 2 * Math.PI / 360) * disanceRatio;\n  return /*#__PURE__*/React.createElement(Circle, {\n    size: seatSize,\n    horizontal: horizontal,\n    vertical: vertical,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    height: seatSize,\n    style: {\n      flexShrink: 0\n    },\n    autoPlay: \"1\",\n    key: `track_${track.getId()}`,\n    ref: ref => ref && track.attach(ref),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }));\n};","map":{"version":3,"sources":["/home/carlo/work/curr/jitsi-bubble/src/components/Seat.js"],"names":["React","Circle","getWidthForSeats","getDistanceRatioForSeats","Seat","track","index","length","seatSize","disanceRatio","angle","horizontal","Math","cos","PI","vertical","sin","flexShrink","getId","ref","attach"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,SAASC,gBAAT,EAA2BC,wBAA3B,QAA2D,UAA3D;AAEA,OAAO,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAT;AAAgBC,EAAAA;AAAhB,CAAD,KAA8B;AAChD,QAAMC,QAAQ,GAAGN,gBAAgB,CAACK,MAAD,CAAjC;AACA,QAAME,YAAY,GAAGN,wBAAwB,CAACI,MAAD,CAA7C;AACA,QAAMG,KAAK,GAAI,MAAMH,MAAP,GAAiBD,KAA/B;AACA,QAAMK,UAAU,GAAGC,IAAI,CAACC,GAAL,CAASH,KAAK,GAAG,CAAR,GAAYE,IAAI,CAACE,EAAjB,GAAsB,GAA/B,IAAsCL,YAAzD;AACA,QAAMM,QAAQ,GAAGH,IAAI,CAACI,GAAL,CAASN,KAAK,GAAG,CAAR,GAAYE,IAAI,CAACE,EAAjB,GAAsB,GAA/B,IAAsCL,YAAvD;AAEA,sBAAQ,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAED,QAAd;AAAwB,IAAA,UAAU,EAAEG,UAApC;AAAgD,IAAA,QAAQ,EAAEI,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACN;AAAO,IAAA,MAAM,EAAEP,QAAf;AAAyB,IAAA,KAAK,EAAE;AAAES,MAAAA,UAAU,EAAE;AAAd,KAAhC;AAAmD,IAAA,QAAQ,EAAC,GAA5D;AAAgE,IAAA,GAAG,EAAG,SAAQZ,KAAK,CAACa,KAAN,EAAc,EAA5F;AAA+F,IAAA,GAAG,EAAGC,GAAD,IAASA,GAAG,IAAId,KAAK,CAACe,MAAN,CAAaD,GAAb,CAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,CAAR;AAGD,CAVM","sourcesContent":["import React from 'react';\nimport { Circle } from './Circle';\n\nimport { getWidthForSeats, getDistanceRatioForSeats } from '../utils';\n\nexport const Seat = ({ track, index, length }) => {\n  const seatSize = getWidthForSeats(length);\n  const disanceRatio = getDistanceRatioForSeats(length);\n  const angle = (360 / length) * index;\n  const horizontal = Math.cos(angle * 2 * Math.PI / 360) * disanceRatio;\n  const vertical = Math.sin(angle * 2 * Math.PI / 360) * disanceRatio;\n  \n  return (<Circle size={seatSize} horizontal={horizontal} vertical={vertical}>\n    <video height={seatSize} style={{ flexShrink: 0 }} autoPlay='1' key={`track_${track.getId()}`} ref={(ref) => ref && track.attach(ref)} />\n  </Circle>);\n};\n"]},"metadata":{},"sourceType":"module"}